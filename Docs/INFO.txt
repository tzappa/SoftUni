Равенство по стойност                        ==
Равенство по стойност и тип данни            ===
Различно по стойност                         !=
Различно по стойност и тип данни             !==
По-голямо                                    >
По-малко                                     <
По-голямо или равно   (= винаги е от дясно)  >=
По-малко или равно                           <=
Четно или нечетно (even or odd)              % 2 == 0
Добавяне на условие                          &&
Конкатенация - долепяне на string(текст)…
При Конкатенация променливите се добавят с back tick (``)  и ${....}

boolean – булева променлива се инициализира като всички останали
Може да има само следните две стойности: true (вярно) или false (грешно)

                    let isValid = true;
Може да се създаде и с условие, което се свежда до true или false
                    let isPositive = a > 0;
let i = Number.MIN_SAFE_INTEGER/Number.MAX_SAFE_INTEGER;

Math.floor - закръгляване към по-малко
Math.ceil - закръгляване към по-голямо
Math.trunk - изрязване на всичко след десетичната точката
Math.abs - от отрицателна в положителна стойност
Math.pow(х, y)  - степенуване х на степен y
2 ** 8 -съкратен начин за степенуване -  с оператор **
Math.sqrt() - квадратен корен
Math.max(a,b,c ...) - връща най-голямото число от подадените
Math.min(a,b,c ...) - връща най-малкото число от подадените
Math.random() - връща произволно число между 0 и <1. 
            function randomNum() {  return Math.random(max);} console.log(randomNum(5)) - връща произволно число между 0 и <5. max - не се включва
            function randomNum(min, max) {  return Math.random() * (max - min) + min;} console.log(randomNum(2,5)) 2= долна граница(включена), 5 горна (не се включва)

Number.isInteger() - true; false
array.indexOf('aaa') => aaa[index] 

toFixed() - форматиране до знака, изискан в скобите, след десетичната точка - ВИНАГИ СТАВА STRING!!!!
parseFloat()  - връща стринг, като изрязва последната нула (ако има такава) след десетичната запетая (10.120 - 10.12)
     n = 3.14534245   => parseFloat(n.toFixed(3)) => 3.145
parseInt(1.234) - връща цяло число => 1; 23.54  => 23

за да се постави \, се изписва \\ . Резултатът ще е \. Направено , за да се избегне объркване от функции като пренасяне на нов ред
